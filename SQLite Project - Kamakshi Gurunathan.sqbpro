<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="" readonly="0" foreign_keys="" case_sensitive_like="" temp_store="" wal_autocheckpoint="" synchronous=""/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1901"/><column_width id="4" width="0"/></tab_structure><tab_browse><current_table name="0,0:"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="90"/><column index="2" value="300"/><column index="3" value="261"/><column index="4" value="111"/><column index="5" value="98"/><column index="6" value="62"/><column index="7" value="66"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CARTON" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="81"/><column index="2" value="40"/><column index="3" value="51"/><column index="4" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ONLINE_CUSTOMER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="97"/><column index="2" value="125"/><column index="3" value="126"/><column index="4" value="176"/><column index="5" value="124"/><column index="6" value="90"/><column index="7" value="187"/><column index="8" value="151"/><column index="9" value="131"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_HEADER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="97"/><column index="3" value="92"/><column index="4" value="107"/><column index="5" value="112"/><column index="6" value="109"/><column index="7" value="163"/><column index="8" value="84"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_ITEMS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="73"/><column index="2" value="88"/><column index="3" value="137"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="88"/><column index="2" value="300"/><column index="3" value="156"/><column index="4" value="111"/><column index="5" value="186"/><column index="6" value="40"/><column index="7" value="51"/><column index="8" value="53"/><column index="9" value="57"/></column_widths><filter_values><column index="1" value="201"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT_CLASS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="156"/><column index="2" value="155"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Q1">--Display the products based on their criteria

SELECT 
	PRODUCT_CLASS_CODE,
	PRODUCT_ID,
	PRODUCT_DESC,
	PRODUCT_PRICE,
CASE
	WHEN PRODUCT_CLASS_CODE = 2050 THEN PRODUCT_PRICE + 2000
	WHEN PRODUCT_CLASS_CODE = 2051 THEN PRODUCT_PRICE + 500
	WHEN PRODUCT_CLASS_CODE = 2052 THEN PRODUCT_PRICE + 600
	ELSE PRODUCT_PRICE
END AS 'Updated Price'

FROM
	PRODUCT

ORDER BY PRODUCT_CLASS_CODE DESC;</sql><sql name="Q2">-- Inventory status of products as per their available quantity

SELECT
	P.PRODUCT_ID,
	PC.PRODUCT_CLASS_CODE,
	PC.PRODUCT_CLASS_DESC,
	P.PRODUCT_QUANTITY_AVAIL,

CASE 
	WHEN PC.PRODUCT_CLASS_CODE IN(2050,2053) THEN 
		CASE
			WHEN P.PRODUCT_QUANTITY_AVAIL = 0 THEN 'Out of Stock'
			WHEN P.PRODUCT_QUANTITY_AVAIL &lt;= 10 THEN 'Low Stock'
			WHEN (P.PRODUCT_QUANTITY_AVAIL &gt;= 11 AND P.PRODUCT_QUANTITY_AVAIL &lt;= 30) THEN 'In Stock'
			WHEN P.PRODUCT_QUANTITY_AVAIL &gt;= 31 THEN 'Enough Stock'
		END	
	WHEN PC.PRODUCT_CLASS_CODE IN (2052,2056) THEN
		CASE
			WHEN P.PRODUCT_QUANTITY_AVAIL = 0 THEN 'Out of Stock'
			WHEN P.PRODUCT_QUANTITY_AVAIL &lt;= 20 THEN 'Low Stock'
			WHEN (P.PRODUCT_QUANTITY_AVAIL &gt;= 21 AND P.PRODUCT_QUANTITY_AVAIL &lt;= 80) THEN 'In Stock'
			WHEN P.PRODUCT_QUANTITY_AVAIL &gt;= 81 THEN 'Enough Stock'	
		END 
	ELSE
		CASE
			WHEN P.PRODUCT_QUANTITY_AVAIL = 0 THEN 'Out of Stock'
			WHEN P.PRODUCT_QUANTITY_AVAIL &lt;= 15 THEN 'Low Stock'
			WHEN (P.PRODUCT_QUANTITY_AVAIL &gt;= 16 AND P.PRODUCT_QUANTITY_AVAIL &lt;= 50) THEN 'In Stock'
			WHEN P.PRODUCT_QUANTITY_AVAIL &gt;= 51 THEN 'Enough Stock'
		END
	END AS 'Inventory Status' 
FROM PRODUCT AS P
JOIN PRODUCT_CLASS AS PC ON PC.PRODUCT_CLASS_CODE = P.PRODUCT_CLASS_CODE
ORDER BY PC.PRODUCT_CLASS_CODE ASC;</sql><sql name="Q3">-- Count of cities (more than 1) in all countries other than USA and Malaysia

SELECT COUNTRY, count(CITY) AS City_Count

FROM ADDRESS
WHERE COUNTRY NOT IN ('USA','Malaysia')
GROUP BY COUNTRY
HAVING City_Count &gt; 1
ORDER BY City_Count DESC;
</sql><sql name="Q4">-- Orders shipped to cities whose pin codes do not have any 0s in them

SELECT 
	OC.CUSTOMER_ID,
	OC.CUSTOMER_FNAME || ' ' || OC.CUSTOMER_LNAME AS CUSTOMER_FULL_NAME,
	AD.CITY,
	AD.PINCODE,
	OH.ORDER_ID,
	OH.ORDER_DATE,
	P.PRODUCT_DESC,
	OI.PRODUCT_QUANTITY * P.PRODUCT_PRICE AS SUBTOTAL

FROM
	ONLINE_CUSTOMER AS OC
	JOIN ORDER_HEADER AS OH ON OH.CUSTOMER_ID = OC.CUSTOMER_ID
	JOIN ADDRESS AS AD ON AD.ADDRESS_ID = OC.ADDRESS_ID
	JOIN ORDER_ITEMS AS OI ON OI.ORDER_ID = OH.ORDER_ID
	JOIN PRODUCT AS P ON OI.PRODUCT_ID = P.PRODUCT_ID
	
WHERE OH.ORDER_STATUS = 'Shipped'
AND AD.PINCODE NOT IN
		(SELECT AD.PINCODE
		FROM ADDRESS AS AD
		WHERE AD.PINCODE LIKE ('%0%'))

ORDER BY CUSTOMER_FULL_NAME, ORDER_DATE, SUBTOTAL ASC;</sql><sql name="Q5">--  Item which has been bought maximum no. of times (Quantity Wise) along with product id 201.

SELECT
	OI.PRODUCT_ID,
	P.PRODUCT_DESC,
	sum(OI.PRODUCT_QUANTITY) AS TOTAL_QUANTITY
	
FROM
	PRODUCT AS P
	JOIN ORDER_ITEMS AS OI ON OI.PRODUCT_ID = P.PRODUCT_ID
	
WHERE ORDER_ID IN
	(SELECT ORDER_ID
	 FROM ORDER_ITEMS 
	 WHERE PRODUCT_ID = 201)
AND	OI.PRODUCT_ID &lt;&gt; 201

GROUP BY OI.PRODUCT_ID
ORDER BY TOTAL_QUANTITY DESC
LIMIT 1
;</sql><sql name="Q6">-- All customers even if they have not ordered any item

SELECT
	OH.CUSTOMER_ID,
	OC.CUSTOMER_FNAME || ' ' || OC.CUSTOMER_LNAME AS CUSTOMER_FULL_NAME,
	OC.CUSTOMER_EMAIL,
	OI.ORDER_ID,
	P.PRODUCT_DESC,
	OI.PRODUCT_QUANTITY,
	OI.PRODUCT_QUANTITY * P.PRODUCT_PRICE AS SUBTOTAL

FROM
	ONLINE_CUSTOMER AS OC
	LEFT JOIN ORDER_HEADER AS OH ON OH.CUSTOMER_ID = OC.CUSTOMER_ID
	LEFT JOIN ORDER_ITEMS AS OI ON OI.ORDER_ID = OH.ORDER_ID
	LEFT JOIN PRODUCT AS P ON P.PRODUCT_ID = OI.PRODUCT_ID;

</sql><current_tab id="0"/></tab_sql></sqlb_project>
